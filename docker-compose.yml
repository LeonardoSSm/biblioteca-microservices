services:
  config-server:
    build: ./config-server
    ports: ["8888:8888"]
    volumes:
      - ./config-repo:/config-repo

  discovery-server:
    build: ./discovery-server
    ports: ["8761:8761"]
    depends_on: [config-server]

  catalog-db:
    image: postgres:16
    environment:
      POSTGRES_DB: catalog
      POSTGRES_USER: catalog
      POSTGRES_PASSWORD: catalog
    ports: ["5433:5432"]

  reservations-db:
    image: postgres:16
    environment:
      POSTGRES_DB: reservations
      POSTGRES_USER: reservations
      POSTGRES_PASSWORD: reservations
    ports: ["5434:5432"]

  rabbitmq:
    image: rabbitmq:3-management
    ports: ["5672:5672", "15672:15672"]

  catalog-service:
    build: ./catalog-service
    ports: ["8081:8081"]
    depends_on:
      config-server:
        condition: service_started
      discovery-server:
        condition: service_started
      catalog-db:
        condition: service_started
    environment:
      SPRING_APPLICATION_NAME: catalog-service
      SPRING_CONFIG_IMPORT: "optional:configserver:"
      SPRING_CLOUD_CONFIG_URI: "http://config-server:8888"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://discovery-server:8761/eureka"
      # Datasource (fallback local)
      SPRING_DATASOURCE_URL: "jdbc:postgresql://catalog-db:5432/catalog"
      SPRING_DATASOURCE_USERNAME: "catalog"
      SPRING_DATASOURCE_PASSWORD: "catalog"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "update"

  reservations-service:
    build: ./reservations-service
    ports: [ "8082:8082" ]
    depends_on:
      config-server:
        condition: service_started   # pode trocar p/ service_healthy se tiver healthcheck
      discovery-server:
          condition: service_started
      reservations-db:
          condition: service_started
      rabbitmq:
          condition: service_started
    environment:
      SPRING_APPLICATION_NAME: reservations-service
      SPRING_CONFIG_IMPORT: "optional:configserver:"
      SPRING_CLOUD_CONFIG_URI: "http://config-server:8888"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://discovery-server:8761/eureka"

      # Datasource (já estava ok pelos logs, mas deixo explícito)
      SPRING_DATASOURCE_URL: "jdbc:postgresql://reservations-db:5432/reservations"
      SPRING_DATASOURCE_USERNAME: "reservations"
      SPRING_DATASOURCE_PASSWORD: "reservations"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "update"

      # RabbitMQ (necessário p/ AMQP)
      SPRING_RABBITMQ_HOST: "rabbitmq"
      SPRING_RABBITMQ_PORT: "5672"
      SPRING_RABBITMQ_USERNAME: "guest"
      SPRING_RABBITMQ_PASSWORD: "guest"

      # >>> PLACEHOLDERS usados no ReservaService <<<
      APP_AMQP_EXCHANGE: "library.exchange"
      APP_AMQP_QUEUE: "notifications-queue"
      APP_AMQP_ROUTING_KEY: "notifications.route"

      SPRING_APPLICATION_JSON: |
        {
          "app": {
            "amqp": {
              "exchange": "library.exchange",
              "queue": "notifications-queue",
              "routingKey": "notifications.route"
            }
          }
        }

  api-gateway:
    build: ./api-gateway
    ports: ["8080:8080"]
    depends_on: [config-server, discovery-server, catalog-service, reservations-service]
    environment:
      SPRING_APPLICATION_NAME: api-gateway
      SPRING_CONFIG_IMPORT: "optional:configserver:"
      SPRING_CLOUD_CONFIG_URI: "http://config-server:8888"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://discovery-server:8761/eureka"

  notifier-service:
    build: ./notifier-service
    ports: [ "8083:8083" ]
    depends_on:
      config-server:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      SPRING_APPLICATION_NAME: notifier-service
      SPRING_CONFIG_IMPORT: "optional:configserver:"
      SPRING_CLOUD_CONFIG_URI: "http://config-server:8888"

      SPRING_RABBITMQ_HOST: "rabbitmq"
      SPRING_RABBITMQ_PORT: "5672"
      SPRING_RABBITMQ_USERNAME: "guest"
      SPRING_RABBITMQ_PASSWORD: "guest"

      APP_AMQP_EXCHANGE: "library.exchange"
      APP_AMQP_QUEUE: "notifications-queue"
      APP_AMQP_ROUTING_KEY: "notifications.route"

      SPRING_APPLICATION_JSON: |
        {
          "app": {
            "amqp": {
              "exchange": "library.exchange",
              "queue": "notifications-queue",
              "routingKey": "notifications.route"
            }
          }
        }

  prometheus:
    build: ./prometheus
    container_name: prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    ports: ["3000:3000"]

  zipkin:
    image: openzipkin/zipkin
    ports: ["9411:9411"]
